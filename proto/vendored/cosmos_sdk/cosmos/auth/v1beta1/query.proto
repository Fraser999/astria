syntax = "proto3";
package cosmos.auth.v1beta1;

import "cosmos_sdk/cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_sdk/cosmos/auth/v1beta1/auth.proto";
import "google/protobuf/any.proto";

// This file contains types which are copied from
// https://github.com/celestiaorg/cosmos-sdk/blob/76bcf5af73b0a166552b64f9df0f87cc813aba76/proto/cosmos/auth/v1beta1/query.proto
// (v1.18.3-sdk-v0.46.14 tag).

// Query defines the gRPC querier service.
service Query {
  // Accounts returns all the existing accounts
  //
  // Since: cosmos-sdk 0.43
  rpc Accounts(QueryAccountsRequest) returns (QueryAccountsResponse);

  // Account returns account details based on address.
  rpc Account(QueryAccountRequest) returns (QueryAccountResponse);

  // Params queries all parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse);
}

// QueryAccountsRequest is the request type for the Query/Accounts RPC method.
//
// Since: cosmos-sdk 0.43
message QueryAccountsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAccountsResponse is the response type for the Query/Accounts RPC method.
//
// Since: cosmos-sdk 0.43
message QueryAccountsResponse {
  // accounts are the existing accounts
  repeated google.protobuf.Any accounts = 1;

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAccountRequest is the request type for the Query/Account RPC method.
message QueryAccountRequest {
  // address defines the address to query for.
  string address = 1;
}

// QueryAccountResponse is the response type for the Query/Account RPC method.
message QueryAccountResponse {
  // account defines the account of the corresponding address.
  google.protobuf.Any account = 1;
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1;
}
